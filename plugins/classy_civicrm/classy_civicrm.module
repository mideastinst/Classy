<?php

//can I shift $params to a generic set for the user, rather than pushing collection into each function?

/** 
 * Aggregates all calls to the CiviCRM API
 */

function _classy_civicrm_initialize_api() {
  $civi_drupal_path = drupal_get_path('module','civicrm');
  $civi_api_path = strstr($civi_drupal_path, 'drupal', true); 
  $civi_api_path .= '/api/api.php';  //@todo add custom directory look, also local
  civicrm_initialize();
  require_once $civi_api_path;
} 


function classy_civicrm_civicrm_post( $op, $objectName, $objectId, &$objectRef ) {
  _classy_civicrm_initialize_api();
  
  $uid = $GLOBALS['user']->uid;
  $civiuser = classy_civicrm_contact($uid);
  $credit = classy_civicrm_contribution_credits($civiuser, $objectId);  //this is grabbing current contribution
  
  //check to see if language class contribution type
  $contribution_types = array('5', '6', '7',); //@todo move to configuration var
  if (in_array($credit['values'][$objectId]['contribution_type_id'], $contribution_types)) {  //undef index
  
    if ($op == 'create' && $objectName == 'Contribution') {
      //break into number of contributions based on multiples of amount
    
      //Check to see if this is paid or waiting 
      $is_paid = ($credit['values'][$objectId]['contribution_status_id'] == 1 ? TRUE : FALSE); 
      //add language contributions to credits table
      $table = 'classy_civicrm_credits';
      $record = array(
        'drupal_uid' => $uid,
        'civi_contact_id' => $civiuser['id'],
        'civi_contribution_id' => $objectId,
        'paid' => $is_paid,
        'used' => 0,
      );
      drupal_write_record($table, $record);
      
    } elseif ($op == 'edit' && $objectName == 'Contribution') {
      if ($credit['values'][$objectId]['is_pay_later'] == 1 && $credit['values'][$objectId]['contribution_status_id'] == 1) {
        //get the old record
        $query = db_select('classy_civicrm_credits', 'c');
        $query
          ->fields('c')
          ->condition('drupal_uid', $uid,'=')
          ->condition('civi_contribution_id', $objectId,'=');
        $result = $query->execute()->fetchAssoc();
        
        $table = 'classy_civicrm_credits';
        $credit_id = $result['id'];
        $record = array(
          'id' => $credit_id,
          'paid' => 1,
        );  
        drupal_write_record($table, $record, 'id');

      }        
    }    
  }        

}

/**
 * CiviCRM get contact 
 */
function classy_civicrm_contact($uid = NULL) {
  if (!$uid) {
    $uid = $GLOBALS['user']->uid;
  }
  //@todo breaks on anon user  
  //Get current user civicrm id - use uf_match to get the contact based on drupal user
  $contact = civicrm_api('UFMatch', 'get', array('version' => 3, 'uf_id' => $uid));
  foreach ($contact['values'] as $drupal_user){
    $civiuser = civicrm_api('contact' , 'get', array('version' => 3, 'id' => $drupal_user['contact_id']));
  }
  return $civiuser;
}

/**
 * CiviCRM get contribution
 *
 * Get class contributions for civi user
 */ 

function classy_civicrm_contribution_credits($civiuser, $contribution_id = NULL){
  
  /* 
  // available params  
          'contact_id' => '1',
          'contact_type' => 'Individual',
          'sort_name' => 'Anderson, Anthony',
          'display_name' => 'Anthony Anderson',
          'contribution_id' => '1',
          'currency' => 'USD',
          'receive_date' => '2010-01-20 00:00:00',
          'non_deductible_amount' => '10.00',
          'total_amount' => '100.00',
          'fee_amount' => '51.00',
          'net_amount' => '91.00',
          'trxn_id' => '23456',
          'invoice_id' => '78910',
          'contribution_source' => 'SSF',
          'is_test' => 0,
          'is_pay_later' => 0,
          'contribution_type_id' => '11',
          'contribution_type' => 'Prize',
          'accounting_code' => '1005',
          'contribution_status_id' => '1',
          'contribution_status' => 'Completed',
          'id' => '1',
  */
  $params = array('version' => 3, 'contact_id' => $civiuser['id']);
  if ($contribution_id) {
    $params['contribution_id'] = $contribution_id;
  }
  $contributions = civicrm_api( 'contribution', 'get', $params );
  return $contributions;
}


 
/**
 * Add 'approved' role / permission to user
 */
 
 // correct time to do this is when someone orders a class credit 
 // how should we handle multiple credits?  can I 'mark' a contribution as used?

function classy_civicrm_approval_criterion($type) {
   $uid = $GLOBALS['user']->uid;
  //added criteria - entry in 'credits' table
  if ($type == 'class') {
    $contrib_id = '4';
  } else {
    $contrib_id = '5';
  }
  
  //need to add contribution_type_id field to credits table
  
  //check credits table for 'paid', !'used' entries for the selected contrib_id
  $query = db_select('classy_civicrm_credits', 'c');
  $query
    ->fields('c')
    ->condition('drupal_uid', $uid,'=')
    //->condition('civi_contribution_type_id', $contrib_id, '=')
    ->condition('used', 0, '=');
  $result = $query->execute()->fetchAll();
    
  //check for credits
  $num_credits = count($result);
  $credit = ($num_credits > 0 ? TRUE : FALSE);
  
  if ($credit == TRUE) {
    $criterion = array('type' => 'has_credit', 'pass' => TRUE);
  } else {
    $criterion = array('type' => 'has_credit', 'pass' => FALSE, 'target' => '/civicrm/contribute/transact?reset=1&id=' . $contrib_id, 'text'=> 'Add Credits');
  }
  return $criterion;
  
}
  
  

// ///////////////////////old event handling///////////////////


/**
 * Implementation of hook_form_alter() 
 */
 
function classy_civicrm_form_event_node_form_alter(&$form, &$form_state, $form_id) {
  //Add event creation to the node submission event
  $form['#submit'][] = '_classy_civicrm_event_submit';
}


//////////////migration stuff///////////////////
/*
INSERT INTO classy_civicrm_credits 
  (drupal_uid,civi_contact_id,civi_contribution_id,paid,used)
  VALUES
  (1,1,8,1,0),
  (1,1,7,0,0),
  (1,1,6,1,0),
  (1,1,4,0,0)
  
*/
